Commands for Annotation Demo:
#learing grep:
grep "Gene10001" file.txt
grep -v "Gene10001" file.txt	#returns all NON-matching lines
grep -f file.list file.txt 	#returns all matches to a list of search terms in a file (i.e. file.list)

#learning sed:
sed 's/this/that/g' file.txt
sed -i 's/this/that/g' file.txt

#learning awk:
awk '{print $1}' file.txt
awk '{print $1"_"$2}' file.txt	#will combine column 1 and 2, separated by a "_"

#formatting Report.xls to be useful on command line:
sed 's/\ /_/g' Report.xls > Report_wospaces.xls #or
sed -i 's/\ /_/g' Report.xls

#generating blast information to add to Report:
awk '{print $1, $2"_"$3}' blastp.out | sort > tmp

#learning join:
join -1 5 -2 1 file1.txt file2.txt

#learning sort:
sort file.txt > file.sorted
sort -k1,3 file.txt > file.sorted
sort -k1,1 file.txt > file.sorted

#using join with sort:
join -1 5 -2 1 <(sort file1.txt) <(sort file2.txt)

#dealing with missing data:
join -a 2 -1 5 -2 1 file1.txt file2.txt

#applying it to add data to our Report:
join -a 1 -1 5 -2 1 <(sort -k5,5 Report_wospace.xls) tmp | less -S

##############################
Commands for KEGG Demo:
#Generate KEGG list from Report:
awk '{print $1,$12}' Report_wospaces.xls | grep "KO" | sed 's/KEGG.*`KO://g' > KEGG.list

#Sort the Report and remove duplicates:
sort KEGG.list | uniq > tmp
mv tmp KEGG.list

#Generate only a list of KEGG terms:
awk '{print $2}' KEGG.list > KEGG_only.list

#Generate only a list of KEGG terms and colors:
awk '{print $2, "yellow"}' KEGG.list > KEGG_only.list

#Generate a list of KEGG terms, color with two colors - one for items in a list, one for remaining:
grep -f DE.list KEGG.list | awk '{print $2, "green"}' > DE.KEGG.list
grep -vf DE.list KEGG.list | awk '{print $2, "yellow"}' >> DE.KEGG.list 

